classdef MicroscopeActionSequence < MicroscopeAction
    %zstack class for microscope actions
    %   Yao Zhao 11/12/2015
    
    properties (SetAccess = protected)

    end
    
    methods
        function obj = MicroscopeActionSequence(microscope,image_axes)
            obj@MicroscopeAction(microscope,image_axes);
            obj.label = 'zstack';
            obj.file_handle=TiffIO(microscope.datapath,obj.label);
        end
        
        function start(obj)
            % call super
            start@MicroscopeAction(obj);
            % create tiff
            obj.file_handle.fopen(obj.microscope_handle.camera.getSize);
            % handles
            zstage_handle=obj.microscope_handle.zstage;
            trigger_handle=obj.microscope_handle.trigger;
            % set light source
            obj.microscope_handle.trigger.setLightsources...
                (obj.microscope_handle.getLightsource);
            % start camera
            obj.microscope_handle.camera.prepareModeSequence();
            obj.microscope_handle.camera.startSequenceAcquisition();
            % start nidaq in background
            zarray=zstage_handle.getZarray();
            que=trigger_handle.getOutputQueueStack(zarray);
            trigger_handle.start(que);
            % run event loop
            try
            while trigger_handle.isRunning
                if ishandle(obj.image_axes)
                    cla(obj.image_axes);
                    imagesc(camera_handle.getLastImage);
                end
                for i=1:3
                    img=camera_handle.popNextImage;
                    if ~isempty(img)
                        tif.fwrite(img)
                    end
                end
                pause(.001);% very important interrupt,dont delete
                % it gives time for nidaq status to update
            end
            while ~isempty(img)
                img=camera_handle.popNextImage;
                tif.fwrite(img)
            end
            catch exception
                warning(exception.message)
            end

        end
        
        function run (obj)
            obj.start
            
            obj.finish
        end
        
        function finish(obj)
                        % finish
            trigger_handle.finish(zstage_handle.zoffset);
            camera_handle.stopSequenceAcquisition();
            obj.file_handle.fclose(obj.microscope_handle.getSettings);
            finish@MicroscopeAction(obj);
        end
        
        function stop(obj)
            obj.microscope_handle.trigger.finish(...
                obj.microscope_handle.zstage.zoffset);
        end
        
        % get event display for UI
        function dispstr=getEventDisplay(obj,eventstr)
            switch eventstr
                case 'DidStart'
                    dispstr = 'Stop Zstack';
                case 'DidFinish'
                    dispstr = 'Zstack';
                otherwise
                    dispstr=getEventDisplay@MicroscopeAction(obj,eventstr);
            end
        end

    end
    
    events
    end
    
end

